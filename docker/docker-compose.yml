version: '3.8'

services:
  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:5000
    depends_on:
      - backend

  # Backend (Flask)
  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=app.py
      - DATABASE_URL=postgres://user:password@db:5432/mydatabase
      - VECTOR_DB_URL=http://vector-db:5001
      - GRAPH_DB_URL=neo4j://neo4j:7687
      - KEYCLOAK_URL=http://keycloak:8080
    depends_on:
      - db
      - vector-db
      - neo4j
      - keycloak
    networks:
      - backend

  # Postgres Database
  postgres-db:
    image: postgres:13
    container_name: db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydatabase
    ports:
      - "5432:5432"
    networks:
      - backend

  # Vector Database (example: Faiss)
  vector-db:
    image: some-vector-db-image
    container_name: vector-db
    ports:
      - "5001:5001"
    networks:
      - backend

  # Neo4j Graph Database
  neo4j:
    image: neo4j:4.3
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7687:7687"
      - "7474:7474"
    networks:
      - backend

  # Keycloak (Authenticator)
  keycloak:
    image: jboss/keycloak:latest
    container_name: keycloak
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
    ports:
      - "8080:8080"
    networks:
      - backend

networks:
  backend:
    driver: bridge

# services:
#   postgres:
#     image: postgres:13
#     restart: unless-stopped
#     environment:
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#     volumes:
#       - "keycloak_data:/var/lib/postgresql/data"
#     networks:
#       keycloaknet:
#         aliases:
#           - postgres

#   keycloak:
#     build: ./keycloak
#     restart: unless-stopped
#     command: "start --optimized"
#     environment:
#       VIRTUAL_HOST: "auth.${SERVICE_DOMAIN}, www.auth.${SERVICE_DOMAIN}"
#       LETSENCRYPT_HOST: "auth.${SERVICE_DOMAIN}, www.auth.${SERVICE_DOMAIN}"
#       VIRTUAL_PORT: 8080
#       KC_DB_URL_HOST: postgres
#       KC_DB_URL_PORT: "5432"
#       KC_DB_URL_DATABASE: postgres
#       KC_DB_USERNAME: postgres
#       KC_DB_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
#       KC_PROXY_HEADERS: xforwarded
#       KC_HTTP_ENABLED: true
#       KC_HOSTNAME_STRICT: false
#     depends_on:
#       - postgres_keycloak
#     networks:
#       keycloaknet:
#       proxynet:

# volumes:
#   potgres_data:

# networks:
#   keycloaknet:
#   proxynet:
#     external: true
