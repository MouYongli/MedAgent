services:
  # Frontend (Next.js)
  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/frontend/Dockerfile
    container_name: medagent-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:5000
    depends_on:
      - backend

  # Backend (FastAPI)
  backend:
    build:
      context: ../backend
      dockerfile: ../docker/backend/Dockerfile
    container_name: medagent-backend
    working_dir: /src
    ports:
      - "5000:5000"
    environment:
      - MONGO_URL=mongodb://mongo:mongo@medagent-mongodb:27017
      - WEAVIATE_URL=http://medagent-weaviate:8080
      - DATABASE_URL=postgres://user:password@postgres-db:5432/mydatabase
      - GRAPH_DB_URL=neo4j://neo4j:7687
      - KEYCLOAK_URL=http://keycloak:8080
    depends_on:
      mongodb:
        condition: service_healthy
      weaviate:
        condition: service_healthy
#      postgres-db:
#        condition: service_healthy
#      neo4j:
#        condition: service_healthy
#      keycloak:
#        condition: service_healthy
    networks:
      - backend

  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: medagent-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
    volumes:
      - mongodb-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  weaviate: # other options: https://www.datacamp.com/blog/the-top-5-vector-databases, Melvis already used in other papers
    image: cr.weaviate.io/semitechnologies/weaviate:1.30.0
    container_name: medagent-weaviate
    ports:
      - "8081:8080"
      - "50051:50051"
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: on-failure:0
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      ENABLE_API_BASED_MODULES: 'true'
      CLUSTER_HOSTNAME: 'node1'
      ENABLE_MODULES: text2vec-transformers
      DEFAULT_VECTORIZER_MODULE: text2vec-transformers
      TRANSFORMERS_INFERENCE_API: http://t2v-transformers:8080
    depends_on:
      - t2v-transformers
    networks:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/v1/.well-known/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
  t2v-transformers: # required to enable vectorizer
    image: cr.weaviate.io/semitechnologies/transformers-inference:sentence-transformers-multi-qa-MiniLM-L6-cos-v1
    environment:
      ENABLE_CUDA: 0
    networks:
      - backend

#  # Postgres Database
#  postgres-db:
#    image: postgres:13
#    container_name: medagent-postgres-db
#    environment:
#      - POSTGRES_USER=user
#      - POSTGRES_PASSWORD=password
#      - POSTGRES_DB=mydatabase
#    ports:
#      - "5432:5432"
#    networks:
#      - backend
#
#  # Vector Database (example: Faiss)
#  vector-db:
#    image: some-vector-db-image
#    container_name: vector-db
#    ports:
#      - "5001:5001"
#    networks:
#      - backend
#
#  # Neo4j Graph Database
#  neo4j:
#    image: neo4j:4.3
#    container_name: medagent-neo4j
#    environment:
#      - NEO4J_AUTH=neo4j/password
#    ports:
#      - "7687:7687"
#      - "7474:7474"
#    networks:
#      - backend
#
#  # Keycloak (Authenticator)
#  keycloak:
#    image: quay.io/keycloak/keycloak:latest
#    container_name: medagent-keycloak
#    environment:
#      - KEYCLOAK_USER=admin
#      - KEYCLOAK_PASSWORD=admin
#    ports:
#      - "8080:8080"
#    networks:
#      - backend

networks:
  backend:
    driver: bridge

volumes:
  mongodb-data:
  weaviate_data: